ГЕНЕРАТОР

Генератор – объект базы данных, служащий для генерации последовательностей целых
чисел.

Создание генератора
CREATE GENERATOR name;
Здесь name – имя генератора. Имя генератора, как правило, содержит имя поля, для
которого он предназначен. Например, генератор для поля TaskID может называться TaskID_GEN.

Для того чтобы установить генератор в другое значение, необходимо использовать команду SET GENERATOR:
SET GENERATOR name TO value;
Здесь name - имя генератора, value - новое значение генератора (число в диапазоне от -264 до 264- 1).

Для того чтобы получить следующее значение генератора, необходимо применить функцию GEN_ID
(здесь name – имя генератора, step – инкремент генератора):
GEN_ID( name, step);

Использование генератора
INSERT INTO Subject (SubjectID, SubjectName)
	VALUES (GEN_ID(SubjectID_GEN,1),'OBD');

Удаление генератора
DELETE FROM RDB$GENERATORS
	WHERE RDB$GENERATORS_NAME = 'SubjectID_GEN';

===========================================================================================================

ТРИГРЫ

Триггер – процедура, автоматически вызываемая при операциях с таблицей.
Под операциями понимаются операторы INSERT, UPDATE, DELETE.
Преимущества использования триггеров:
 - автоматическое отслеживание целостности данных не только на уровне связи между
   таблицами, но и любым произвольным образом;
 - облегчение написания приложений БД и их поддержки.


Создание тригера
CREATE TRIGGER name FOR { table | view}
 [ACTIVE | INACTIVE]
 {BEFORE | AFTER} {DELETE | INSERT | UPDATE}
 [POSITION number]
 AS < trigger_body>

< trigger_body> = [<variable_declaration_list>] < block>
< variable_declaration_list> = DECLARE VARIABLE variable datatype;
[DECLARE VARIABLE variable datatype; .]
< block> =
BEGIN
< compound_statement> [<compound_statement> .]
END
< compound_statement> = {<block> | statement;}

Оператор состоит из заголовка триггера и тела триггера. Заголовок содержит:
- имя триггера, уникальное по БД;
- имя таблицы, с которой ассоциируется триггер;
- указание на момент, когда триггер должен вызываться

Все, что идет до части AS оператора CREATE TRIGGER составляет заголовок триггера. 

Заголовок триггера должен определять имя триггера и имя ассоциированной с
триггером таблицы или пользовательского представления.

Таблица или пользовательское представление должны существовать на момент выполнения оператора CREATE TRIGGER. 

Оставшаяся часть оператора определяет, когда и как вызывается триггер


статус триггера, ACTIVE or INACTIVE. Если триггер активный, он вызывается при
наступлении события триггера. Если триггер неактивный, он не вызывается. 

время вызова триггера: BEFORE (до) или AFTER (после) некоторого действия

операция, с которой связан триггер: INSERT, UPDATE, или DELETE. Может быть
указана только одна операция

Если один и тот же триггер должен выполнятся на несколько
операций, то необходимо создать несколько триггеров с одинаковым телом, различающихся
именем и операцией. 

(опционально) номер триггера по порядку среди всех триггеров, ассоциированных с
данной операцией на данной таблице - POSITION. Номер позиции может быть любым числом от
0 до 32767. Значение по умолчанию - 0. Триггеры с меньшими номерами вызываются раньше. 

name
Имя триггера. В имени обычно упоминают имя таблицы и момент запуска триггера.
Например, WORKER_BI_T1 - триггер #1 таблицы WORKER, вызываемый перед
добавлением (before insert).

--------------------------------------------------------------------------------------------
table
Имя таблицы или пользовательского представления, с которым ассоциируется триггер.

ACTIVE|INACTIVE
Указывает «активность» триггера. Не активные триггеры игнорируются. По умолчанию триггер активен.

BEFORE|AFTER
Указывает момент запуска триггера до операции (BEFORE) или после операции (AFTER).

DLETE|INSERT|UPDATE
Указывает операцию, с которой связан триггер.

POSITION number
Указывает порядок срабатывания триггера. На одно и то же действие могут быть
назначены несколько триггеров. В таком случае они должны различаться позициями.
Триггеры вызываются в порядке увеличения позиции. Позиции триггеров не
обязательно должны идти строго друг за другом (1, 2, 3) допустимы произвольные
позиции (5, 25, 37). Триггеры с одинаковыми позициями вызываются по алфавиту, в
соответствии с именами.

DECLARE VARIABLE
var <datatype>
Описывает локальную переменную триггера. С помощью DECLARE VARIABLE
можно описать только одну переменную, за оператором должна следовать точка с
запятой. Var - имя локальной переменной, должно быть уникально для триггера.
<datatype> - тип данных переменной

statement
Любой одиночный оператор на языке процедур и триггеров Interbase. Любой
оператор за исключением BEGIN END должен заканчиваться точкой с запятой.

terminator
Разделитель, определенный оператором SET TERM. Разделитель служит для указания
конца тела триггера. Используется только в isql. 
--------------------------------------------------------------------------------------------

Все, что следует за частью AS оператора CREATE TRIGGER составляет тело триггера.
Тело триггера состоит из опционального списка локальных переменных, за которым идет блок
операторов. Блок состоит из набора операторов на языке хранимых процедур и триггеров,
заключенных в операторные скобки. 

Язык хранимых процедур и триггеров Interbase
 и тд в методе






